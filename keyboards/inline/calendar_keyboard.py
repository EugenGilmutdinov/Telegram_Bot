import locale
import calendar
from datetime import date, timedelta
from keyboards.inline.filters_calendar import calendar_factory, calendar_factory_ch_day, calendar_zoom
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

EMTPY_FIELD = '1'
WEEK_DAYS = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', 'C–±', '–í—Å–∫']
MONTHS = [(1, '–Ø–Ω–≤–∞—Ä—å'), (2, '–§–µ–≤—Ä–∞–ª—å'), (3, '–ú–∞—Ä—Ç'), (4, '–ê–ø—Ä–µ–ª—å'), (5, '–ú–∞–π'),
          (6, '–ò—é–Ω—å'), (7, '–ò—é–ª—å'), (8, '–ê–≤–≥—É—Å—Ç'), (9, '–°–µ–Ω—Ç—è–±—Ä—å'), (10, '–û–∫—Ç—è–±—Ä—å'),
          (11, '–ù–æ—è–±—Ä—å'), (12, '–î–µ–∫–∞–±—Ä—å')]

locale.setlocale(
    category=locale.LC_ALL,
    locale="Russian"
)


def generate_calendar_days(year: int, month: int) -> InlineKeyboardMarkup:
    '''
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π –≤ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ

    :param year: int - –≥–æ–¥
    :param month: int - –º–µ—Å—è—Ü
    :return: InlineKeyboardMarkup - –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    '''
    keyboard = InlineKeyboardMarkup(row_width=7)
    today = date.today()

    keyboard.add(
        InlineKeyboardButton(
            text=date(year=year, month=month, day=1).strftime('%b %Y').title(),
            callback_data=EMTPY_FIELD
        )
    )
    keyboard.add(*[
        InlineKeyboardButton(
            text=day,
            callback_data=EMTPY_FIELD
        )
        for day in WEEK_DAYS
    ])

    for week in calendar.Calendar().monthdayscalendar(year=year, month=month):
        week_buttons = []
        for day in week:
            day_name = ' '
            full_date = EMTPY_FIELD
            if day == today.day and today.year == year and today.month == month:
                day_name = 'üîò'
                full_date = date(year=year, month=month, day=day).strftime('%Y-%m-%d')
            elif day != 0:
                day_name = str(day)
                full_date = date(year=year, month=month, day=day).strftime('%Y-%m-%d')
            week_buttons.append(
                InlineKeyboardButton(
                    text=day_name,
                    callback_data=full_date
                )
            )
        keyboard.add(*week_buttons)

    previous_date = date(year=year, month=month, day=1) - timedelta(days=1)
    next_date = date(year=year, month=month, day=1) + timedelta(days=31)

    keyboard.add(
        InlineKeyboardButton(
            text='–ü—Ä–µ–¥ –º–µ—Å',
            callback_data=calendar_factory.new(year=previous_date.year, month=previous_date.month)
        ),
        InlineKeyboardButton(
            text='–û—Ç–¥–∞–ª–∏—Ç—å',
            callback_data=calendar_zoom.new(year=year)
        ),
        InlineKeyboardButton(
            text='–°–ª–µ–¥ –º–µ—Å',
            callback_data=calendar_factory.new(year=next_date.year, month=next_date.month)
        ),
    )

    return keyboard


def chosen_calendar_day(ch_year: int, ch_month: int, ch_day: int) -> InlineKeyboardMarkup:
    '''
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π —Å —É—á—ë—Ç–æ–º —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–µ—Ä–≤–æ–π –¥–∞—Ç—ã

    :param ch_year: int - –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥
    :param ch_month: int - –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
    :param ch_day: int - –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    :return: InlineKeyboardMarkup - –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    '''
    keyboard = InlineKeyboardMarkup(row_width=7)
    today = date.today()
    keyboard.add(
        InlineKeyboardButton(
            text=date(year=ch_year, month=ch_month, day=1).strftime('%b %Y').title(),
            callback_data=EMTPY_FIELD
        )
    )
    keyboard.add(*[
        InlineKeyboardButton(
            text=day,
            callback_data=EMTPY_FIELD
        )
        for day in WEEK_DAYS
    ])

    for week in calendar.Calendar().monthdayscalendar(year=ch_year, month=ch_month):
        week_buttons = []
        for day in week:
            day_name = ' '

            full_date = EMTPY_FIELD
            if day == ch_day and today.year == ch_year and today.month == ch_month:
                day_name = "‚úîÔ∏è"
            elif day == today.day and today.year == ch_year and today.month == ch_month:
                day_name = 'üîò'
            elif day != 0:
                day_name = str(day)
            if (day == ch_day and today.year == ch_year and today.month == ch_month) \
                    or (day == today.day and today.year == ch_year and today.month == ch_month) \
                    or (day != 0):
                chose_date = date(year=ch_year, month=ch_month, day=ch_day).strftime('%Y-%m-%d')
                second_date = date(year=ch_year, month=ch_month, day=day).strftime('%Y-%m-%d')
                full_date = f"{chose_date}, {second_date}"
            week_buttons.append(
                InlineKeyboardButton(
                    text=day_name,
                    callback_data=full_date
                )
            )
        keyboard.add(*week_buttons)

    previous_date = date(year=ch_year, month=ch_month, day=1) - timedelta(days=1)
    next_date = date(year=ch_year, month=ch_month, day=1) + timedelta(days=31)

    keyboard.add(
        InlineKeyboardButton(
            text='–ü—Ä–µ–¥ –º–µ—Å',
            callback_data=calendar_factory_ch_day.new(year=previous_date.year, month=previous_date.month, day=ch_day)
        ),
        InlineKeyboardButton(
            text='–û—Ç–¥–∞–ª–∏—Ç—å',
            callback_data=calendar_zoom.new(year=ch_year)
        ),
        InlineKeyboardButton(
            text='–°–ª–µ–¥ –º–µ—Å',
            callback_data=calendar_factory_ch_day.new(year=next_date.year, month=next_date.month, day=ch_day)
        ),
    )

    return keyboard


def generate_calendar_months(year: int) -> InlineKeyboardMarkup:
    '''
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –º–µ—Å—è—Ü–µ–≤ –≤ –≥–æ–¥—É

    :param year: int - –≥–æ–¥
    :return: InlineKeyboardMarkup - –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    '''
    keyboard = InlineKeyboardMarkup(row_width=3)
    keyboard.add(
        InlineKeyboardButton(
            text=date(year=year, month=1, day=1).strftime('–ì–æ–¥ %Y'),
            callback_data=EMTPY_FIELD
        )
    )
    keyboard.add(*[
        InlineKeyboardButton(
            text=month,
            callback_data=calendar_factory.new(year=year, month=month_number)
        )
        for month_number, month in MONTHS
    ])
    keyboard.add(
        InlineKeyboardButton(
            text='–ü—Ä–µ–¥ –≥–æ–¥',
            callback_data=calendar_zoom.new(year=year - 1)
        ),
        InlineKeyboardButton(
            text='–°–ª–µ–¥ –≥–æ–¥',
            callback_data=calendar_zoom.new(year=year + 1)
        )
    )
    return keyboard
